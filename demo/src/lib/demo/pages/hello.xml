<?xml version="1.0" encoding="UTF-8"?>
<html xmlns:ctl="\red\web\ui\controls" xmlns:data="\demo\data">
	<head>
		<title>Hello, World!</title>
	</head>
	<body>
		<a style="margin: -2em; float: right;" href="https://github.com/theredhead/red.web">
			<ctl:Image id="imgForkMe" imageHref="/img/forkme.png" alt="Fork me on github!"/>
		</a>

		<ctl:Form>
			<div>
				<ctl:Image id="imgLogo" imageHref="/img/logo.png" style="display: block; margin: 2em auto;"/>
			</div>

			<ctl:TabContainer>
				<ctl:TabPage labelText="Hello">

					<ctl:Image id="imgScreenshot" imageHref="/img/screen-640.png" />


					<h1>Hello, World!</h1>
					<p>
						Hello and welcome to the demonstration page of the <code>red.web</code>
						framework for php.
					</p>
					<p>
						On these tabs you'll find a few widgets to play with that demonstrate the
						way this framework allows you to build web pages with hardly any code.
					</p>
					<p>
						In fact... the only code in this pages' class file is the event handling
						for the two buttons you see on this page and amounts to a mere handful of
						lines of code.
					</p>
					<p>
						The code does not change when you change the language, since that's just
						view information.
					</p>

					<ul>
						<li>
							<p>
								<ctl:Button id="btnHello" caption="ï£¿ (Apple logo) is three bytes of UTF-8"/>
								<br />
								Clicking this button triggers the <code>onBtnHello_Clicked</code> handler. It
								does this without the need for glue code because autowiring of events is
								enabled.
							</p>
						</li>
						<li>
							<p>
								<ctl:Button id="btnCrash">Show me an error page!</ctl:Button>
								<br />
								This button triggers the <code>onBtnCrash_Clicked</code> handler which trows
								an exception so you can see what kind of information you can expect to see on
								a developers error page.
							</p>
						</li>
					</ul>

					<p>
						This page is also available <a href="/?language=nl-nl">in dutch.</a>
					</p>


				</ctl:TabPage>
				<ctl:TabPage labelText="Table">
			
					<h2>Table</h2>
					<p>
						This table manages its own state as do all the controls, and it allows pagind when necesary.
					</p>
					<ctl:Table caption="SQLITE_MASTER" pageSize="5">
						<data:TestDatasource />
						<ctl:RowIndicatorColumn />
						<ctl:TableColumn key="type" headerText="Type" />
						<ctl:TableColumn key="name" headerText="Name" />
						<ctl:TableColumn key="sql" headerText="SQL" />
					</ctl:Table>

				</ctl:TabPage>
				<ctl:TabPage labelText="DataGrid">
					
					<h2>DataGrid</h2>
					<p>
						This DataGrid is very similar to the Table on the previous tab, but it is also sortable 
						and able to generate some events. Markup is otherwise identical to the Table.
					</p>
					<ctl:DataGrid id="DataGrid1" caption="SQLITE_MASTER" pageSize="5">
						<data:TestDatasource />
						<ctl:RowIndicatorColumn />
						<ctl:TableColumn key="type" headerText="Type" />
						<ctl:TableColumn key="name" headerText="Name" />
						<ctl:TableColumn key="sql" headerText="SQL" />
					</ctl:DataGrid>

				</ctl:TabPage>
				<ctl:TabPage labelText="Checkboxes">
					
					<h2>A table with checkboxes</h2>
					<p>
						Just here to prove that state is maintained for checkboxes as well.
					</p>
					<table>
						<tr>
							<td><ctl:Checkbox /></td>
							<td><ctl:Checkbox /></td>
							<td><ctl:Checkbox /></td>
						</tr>
						<tr>
							<td><ctl:Checkbox /></td>
							<td><ctl:Checkbox /></td>
							<td><ctl:Checkbox /></td>
						</tr>
						<tr>
							<td><ctl:Checkbox /></td>
							<td><ctl:Checkbox /></td>
							<td><ctl:Checkbox /></td>
						</tr>
					</table>

				</ctl:TabPage>
				<ctl:TabPage labelText="TextBoxes">

					<h2>Textboxes</h2>
					<p>
						This page shows some different types of primitive textboxes.
					</p>
					<dl>
						<dt>Textbox</dt>
						<dd><ctl:Textbox /></dd>

						<dt>Multiple lines</dt>
						<dd><ctl:Textbox multipleline="true" rows="5" cols="40" /></dd>

						<dt>Password textbox</dt>
						<dd><ctl:PasswordTextbox /></dd>
					</dl>
					
				</ctl:TabPage>
				<ctl:TabPage labelText="Nested">
					<h2>Yes...</h2>
					<ctl:TabContainer>
						<ctl:TabPage labelText="You can">
							<h2>Indeed</h2>
							<p>
								Since everything is a distinct object, from basic html tags to intricate controls,
								There is nothing stopping you from nesting multiple TabContainers.
							</p>
						</ctl:TabPage>
						<ctl:TabPage labelText="Another nested page">
							<h2>Although..</h2>
							<p>
								I wouldn't recommend it in most cases.
							</p>
							<ctl:TabContainer>
								<ctl:TabPage labelText="You can">
									<h2>Indeed</h2>
									<p>
										Since everything is a distinct object, from basic html tags to intricate controls,
										There is nothing stopping you from nesting multiple TabContainers.
									</p>
								</ctl:TabPage>
								<ctl:TabPage labelText="Another nested page">
									<h2>Although..</h2>
									<p>
										I wouldn't recommend it in most cases.
									</p>
										<ctl:TabContainer>
											<ctl:TabPage labelText="You can">
												<h2>Indeed</h2>
												<p>
													Since everything is a distinct object, from basic html tags to intricate controls,
													There is nothing stopping you from nesting multiple TabContainers.
												</p>
											</ctl:TabPage>
											<ctl:TabPage labelText="Another nested page">
												<h2>Really?...</h2>
												<p>
													It's getting silly.
												</p>
											</ctl:TabPage>
										</ctl:TabContainer>
								</ctl:TabPage>
							</ctl:TabContainer>
						</ctl:TabPage>
					</ctl:TabContainer>
				</ctl:TabPage>
				<ctl:TabPage labelText="Themes and language">
					<dl>
						<dt>Theme</dt>
						<dd>
							<ctl:DropdownList id="selTheme">
								<ctl:DropdownItem value="default">Default</ctl:DropdownItem>
								<ctl:DropdownItem value="red">RED</ctl:DropdownItem>
							</ctl:DropdownList>
						</dd>

						<dt>Language</dt>
						<dd>
							<ctl:DropdownList id="selLanguage">
								<ctl:DropdownItem value="en-us">English</ctl:DropdownItem>
								<ctl:DropdownItem value="nl-nl">Dutch</ctl:DropdownItem>
							</ctl:DropdownList>
						</dd>
					</dl>
				</ctl:TabPage>

			</ctl:TabContainer>
		</ctl:Form>
	</body>
</html>